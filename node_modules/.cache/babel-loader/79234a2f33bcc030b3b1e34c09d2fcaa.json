{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { getCCNumberMaskType } from 'lib/scripts/utils';\nimport amexSingle from \"lib/media/payment/amex-single.svg\";\nimport amex from \"lib/media/payment/amex.svg\";\nimport dinersSingle from \"lib/media/payment/diners-single.svg\";\nimport diners from \"lib/media/payment/diners.svg\";\nimport discoverSingle from \"lib/media/payment/discover-single.svg\";\nimport discover from \"lib/media/payment/discover.svg\";\nimport jcbSingle from \"lib/media/payment/jcb-single.svg\";\nimport jcb from \"lib/media/payment/jcb.svg\";\nimport maestroSingle from \"lib/media/payment/maestro-single.svg\";\nimport maestro from \"lib/media/payment/maestro.svg\";\nimport mastercardSingle from \"lib/media/payment/mastercard-single.svg\";\nimport mastercard from \"lib/media/payment/mastercard.svg\";\nimport troySingle from \"lib/media/payment/troy-single.svg\";\nimport troy from \"lib/media/payment/troy.svg\";\nimport unionpaySingle from \"lib/media/payment/unionpay-single.svg\";\nimport unionpay from \"lib/media/payment/unionpay.svg\";\nimport visaSingle from \"lib/media/payment/visa-single.svg\";\nimport visa from \"lib/media/payment/visa.svg\";\nconst cardsDetails = {\n  'american-express': {\n    icon: amex,\n    single: amexSingle,\n    color: 'green'\n  },\n  visa: {\n    icon: visa,\n    single: visaSingle,\n    color: 'lime'\n  },\n  diners: {\n    icon: diners,\n    single: dinersSingle,\n    color: 'orange'\n  },\n  discover: {\n    icon: discover,\n    single: discoverSingle,\n    color: 'purple'\n  },\n  jcb: {\n    icon: jcb,\n    single: jcbSingle,\n    color: 'red'\n  },\n  jcb15: {\n    icon: jcb,\n    single: jcbSingle,\n    color: 'red'\n  },\n  maestro: {\n    icon: maestro,\n    single: maestroSingle,\n    color: 'yellow'\n  },\n  mastercard: {\n    icon: mastercard,\n    single: mastercardSingle,\n    color: 'lightblue'\n  },\n  unionpay: {\n    icon: unionpay,\n    single: unionpaySingle,\n    color: 'cyan'\n  },\n  troy: {\n    icon: troy,\n    single: troySingle,\n    color: 'cyan'\n  }\n};\n\nconst useCreditCard = () => {\n  _s();\n\n  const [cardDetails, setCardDetails] = useState({\n    icon: '',\n    single: '',\n    color: 'grey'\n  });\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const updateCardDetails = useCallback(value => {\n    const cardObj = getCCNumberMaskType(value);\n\n    if (cardObj && typeof cardsDetails[cardObj.cardType] !== 'undefined') {\n      setCardDetails(cardsDetails[cardObj.cardType]);\n    } else {\n      setCardDetails({\n        icon: '',\n        single: '',\n        color: 'grey'\n      });\n    }\n  }, []);\n  const turnCardHandler = useCallback(node => {\n    if (node instanceof HTMLInputElement) {\n      node.addEventListener('focus', () => {\n        setIsCardFlipped(true);\n      });\n      node.addEventListener('blur', () => {\n        setIsCardFlipped(false);\n      });\n    } else {\n      setIsCardFlipped(!isCardFlipped);\n    }\n  }, [isCardFlipped]);\n  return {\n    cardDetails,\n    updateCardDetails,\n    isCardFlipped,\n    turnCardHandler\n  };\n};\n\n_s(useCreditCard, \"Sc4XTLRHXi3s+Xdp64pJ+/flL6c=\");\n\nexport default useCreditCard;","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/src/hooks/useCreditCard.ts"],"names":["useCallback","useState","getCCNumberMaskType","cardsDetails","icon","amex","single","amexSingle","color","visa","visaSingle","diners","dinersSingle","discover","discoverSingle","jcb","jcbSingle","jcb15","maestro","maestroSingle","mastercard","mastercardSingle","unionpay","unionpaySingle","troy","troySingle","useCreditCard","cardDetails","setCardDetails","isCardFlipped","setIsCardFlipped","updateCardDetails","value","cardObj","cardType","turnCardHandler","node","HTMLInputElement","addEventListener"],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { getCCNumberMaskType } from 'lib/scripts/utils';\n\nimport amexSingle from 'lib/media/payment/amex-single.svg';\nimport amex from 'lib/media/payment/amex.svg';\nimport dinersSingle from 'lib/media/payment/diners-single.svg';\nimport diners from 'lib/media/payment/diners.svg';\nimport discoverSingle from 'lib/media/payment/discover-single.svg';\nimport discover from 'lib/media/payment/discover.svg';\nimport jcbSingle from 'lib/media/payment/jcb-single.svg';\nimport jcb from 'lib/media/payment/jcb.svg';\nimport maestroSingle from 'lib/media/payment/maestro-single.svg';\nimport maestro from 'lib/media/payment/maestro.svg';\nimport mastercardSingle from 'lib/media/payment/mastercard-single.svg';\nimport mastercard from 'lib/media/payment/mastercard.svg';\nimport troySingle from 'lib/media/payment/troy-single.svg';\nimport troy from 'lib/media/payment/troy.svg';\nimport unionpaySingle from 'lib/media/payment/unionpay-single.svg';\nimport unionpay from 'lib/media/payment/unionpay.svg';\nimport visaSingle from 'lib/media/payment/visa-single.svg';\nimport visa from 'lib/media/payment/visa.svg';\n\nconst cardsDetails: TypeCardDetails = {\n    'american-express': {\n        icon: amex,\n        single: amexSingle,\n        color: 'green'\n    },\n    visa: {\n        icon: visa,\n        single: visaSingle,\n        color: 'lime'\n    },\n    diners: {\n        icon: diners,\n        single: dinersSingle,\n        color: 'orange'\n    },\n    discover: {\n        icon: discover,\n        single: discoverSingle,\n        color: 'purple'\n    },\n    jcb: {\n        icon: jcb,\n        single: jcbSingle,\n        color: 'red'\n    },\n    jcb15: {\n        icon: jcb,\n        single: jcbSingle,\n        color: 'red'\n    },\n    maestro: {\n        icon: maestro,\n        single: maestroSingle,\n        color: 'yellow'\n    },\n    mastercard: {\n        icon: mastercard,\n        single: mastercardSingle,\n        color: 'lightblue'\n    },\n    unionpay: {\n        icon: unionpay,\n        single: unionpaySingle,\n        color: 'cyan'\n    },\n    troy: {\n        icon: troy,\n        single: troySingle,\n        color: 'cyan'\n    }\n};\n\nconst useCreditCard = () => {\n    const [cardDetails, setCardDetails] = useState<TypeCardDetails[0]>({ icon: '', single: '', color: 'grey' });\n    const [isCardFlipped, setIsCardFlipped] = useState(false);\n\n    const updateCardDetails = useCallback((value: string) => {\n        const cardObj = getCCNumberMaskType(value);\n\n        if (cardObj && typeof cardsDetails[cardObj.cardType] !== 'undefined') {\n            setCardDetails(cardsDetails[cardObj.cardType]);\n        } else {\n            setCardDetails({\n                icon: '',\n                single: '',\n                color: 'grey'\n            });\n        }\n    }, []);\n\n    const turnCardHandler = useCallback(\n        (node) => {\n            if (node instanceof HTMLInputElement) {\n                node.addEventListener('focus', () => {\n                    setIsCardFlipped(true);\n                });\n                node.addEventListener('blur', () => {\n                    setIsCardFlipped(false);\n                });\n            } else {\n                setIsCardFlipped(!isCardFlipped);\n            }\n        },\n        [isCardFlipped]\n    );\n\n    return { cardDetails, updateCardDetails, isCardFlipped, turnCardHandler };\n};\n\nexport default useCreditCard;\n"]},"metadata":{},"sourceType":"module"}