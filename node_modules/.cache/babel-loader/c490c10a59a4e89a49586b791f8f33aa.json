{"ast":null,"code":"import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-74ba0139.js';\nimport { DIRECTION } from './utils.js';\n/** Provides details of changing input */\n\nvar ActionDetails = /*#__PURE__*/function () {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n  function ActionDetails(value, cursorPos, oldValue, oldSelection) {\n    _classCallCheck(this, ActionDetails);\n\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection; // double check if left part was changed (autofilling, other non-standard input triggers)\n\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\n\n\n  _createClass(ActionDetails, [{\n    key: \"startChangePos\",\n    get: function get() {\n      return Math.min(this.cursorPos, this.oldSelection.start);\n    }\n    /**\r\n      Inserted symbols count\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"insertedCount\",\n    get: function get() {\n      return this.cursorPos - this.startChangePos;\n    }\n    /**\r\n      Inserted symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"inserted\",\n    get: function get() {\n      return this.value.substr(this.startChangePos, this.insertedCount);\n    }\n    /**\r\n      Removed symbols count\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removedCount\",\n    get: function get() {\n      // Math.max for opposite operation\n      return Math.max(this.oldSelection.end - this.startChangePos || // for Delete\n      this.oldValue.length - this.value.length, 0);\n    }\n    /**\r\n      Removed symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removed\",\n    get: function get() {\n      return this.oldValue.substr(this.startChangePos, this.removedCount);\n    }\n    /**\r\n      Unchanged head symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"head\",\n    get: function get() {\n      return this.value.substring(0, this.startChangePos);\n    }\n    /**\r\n      Unchanged tail symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"tail\",\n    get: function get() {\n      return this.value.substring(this.startChangePos + this.insertedCount);\n    }\n    /**\r\n      Remove direction\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removeDirection\",\n    get: function get() {\n      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE; // align right if delete at right or if range removed (event with backspace)\n\n      return this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos ? DIRECTION.RIGHT : DIRECTION.LEFT;\n    }\n  }]);\n\n  return ActionDetails;\n}();\n\nexport default ActionDetails;","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/node_modules/imask/esm/core/action-details.js"],"names":["_","_createClass","a","_classCallCheck","DIRECTION","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","key","get","Math","min","substr","insertedCount","max","end","length","removedCount","substring","NONE","RIGHT","LEFT"],"mappings":"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","sourcesContent":["import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-74ba0139.js';\nimport { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\n\nvar ActionDetails = /*#__PURE__*/function () {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n  function ActionDetails(value, cursorPos, oldValue, oldSelection) {\n    _classCallCheck(this, ActionDetails);\n\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection; // double check if left part was changed (autofilling, other non-standard input triggers)\n\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\n\n\n  _createClass(ActionDetails, [{\n    key: \"startChangePos\",\n    get: function get() {\n      return Math.min(this.cursorPos, this.oldSelection.start);\n    }\n    /**\r\n      Inserted symbols count\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"insertedCount\",\n    get: function get() {\n      return this.cursorPos - this.startChangePos;\n    }\n    /**\r\n      Inserted symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"inserted\",\n    get: function get() {\n      return this.value.substr(this.startChangePos, this.insertedCount);\n    }\n    /**\r\n      Removed symbols count\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removedCount\",\n    get: function get() {\n      // Math.max for opposite operation\n      return Math.max(this.oldSelection.end - this.startChangePos || // for Delete\n      this.oldValue.length - this.value.length, 0);\n    }\n    /**\r\n      Removed symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removed\",\n    get: function get() {\n      return this.oldValue.substr(this.startChangePos, this.removedCount);\n    }\n    /**\r\n      Unchanged head symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"head\",\n    get: function get() {\n      return this.value.substring(0, this.startChangePos);\n    }\n    /**\r\n      Unchanged tail symbols\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"tail\",\n    get: function get() {\n      return this.value.substring(this.startChangePos + this.insertedCount);\n    }\n    /**\r\n      Remove direction\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"removeDirection\",\n    get: function get() {\n      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE; // align right if delete at right or if range removed (event with backspace)\n\n      return this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos ? DIRECTION.RIGHT : DIRECTION.LEFT;\n    }\n  }]);\n\n  return ActionDetails;\n}();\n\nexport default ActionDetails;\n"]},"metadata":{},"sourceType":"module"}