{"ast":null,"code":"import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass } from '../_rollupPluginBabelHelpers-74ba0139.js';\nimport MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n/** Bridge between HTMLElement and {@link Masked} */\n\nvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\n  _inherits(HTMLMaskElement, _MaskElement);\n\n  var _super = _createSuper(HTMLMaskElement);\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\r\n    @param {HTMLInputElement|HTMLTextAreaElement} input\r\n  */\n\n\n  function HTMLMaskElement(input) {\n    var _this;\n\n    _classCallCheck(this, HTMLMaskElement);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this._handlers = {};\n    return _this;\n  }\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n\n\n  _createClass(HTMLMaskElement, [{\n    key: \"rootElement\",\n    get: function get() {\n      return this.input.getRootNode ? this.input.getRootNode() : document;\n    }\n    /**\r\n      Is element in focus\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n    /**\r\n      Returns HTMLElement selection start\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelectionStart\",\n    get: function get() {\n      return this.input.selectionStart;\n    }\n    /**\r\n      Returns HTMLElement selection end\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      return this.input.selectionEnd;\n    }\n    /**\r\n      Sets HTMLElement selection\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n    /**\r\n      HTMLElement value\r\n      @override\r\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.value;\n    },\n    set: function set(value) {\n      this.input.value = value;\n    }\n    /**\r\n      Binds HTMLElement events to mask internal events\r\n      @override\r\n    */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {\n      var _this2 = this;\n\n      Object.keys(handlers).forEach(function (event) {\n        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n      });\n    }\n    /**\r\n      Unbinds HTMLElement events to mask internal events\r\n      @override\r\n    */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this3 = this;\n\n      Object.keys(this._handlers).forEach(function (event) {\n        return _this3._toggleEventHandler(event);\n      });\n    }\n    /** */\n\n  }, {\n    key: \"_toggleEventHandler\",\n    value: function _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }]);\n\n  return HTMLMaskElement;\n}(MaskElement);\n\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\nexport default HTMLMaskElement;","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/node_modules/imask/esm/controls/html-mask-element.js"],"names":["d","_inherits","e","_createSuper","a","_classCallCheck","_","_createClass","MaskElement","IMask","HTMLMaskElement","_MaskElement","_super","input","_this","call","_handlers","key","get","getRootNode","document","rootElement","activeElement","selectionStart","selectionEnd","value","_unsafeSelect","start","end","setSelectionRange","set","bindEvents","handlers","_this2","Object","keys","forEach","event","_toggleEventHandler","EVENTS_MAP","unbindEvents","_this3","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit"],"mappings":"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","sourcesContent":["import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass } from '../_rollupPluginBabelHelpers-74ba0139.js';\nimport MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\n\nvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\n  _inherits(HTMLMaskElement, _MaskElement);\n\n  var _super = _createSuper(HTMLMaskElement);\n\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\r\n    @param {HTMLInputElement|HTMLTextAreaElement} input\r\n  */\n  function HTMLMaskElement(input) {\n    var _this;\n\n    _classCallCheck(this, HTMLMaskElement);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this._handlers = {};\n    return _this;\n  }\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n\n\n  _createClass(HTMLMaskElement, [{\n    key: \"rootElement\",\n    get: function get() {\n      return this.input.getRootNode ? this.input.getRootNode() : document;\n    }\n    /**\r\n      Is element in focus\r\n      @readonly\r\n    */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n    /**\r\n      Returns HTMLElement selection start\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelectionStart\",\n    get: function get() {\n      return this.input.selectionStart;\n    }\n    /**\r\n      Returns HTMLElement selection end\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      return this.input.selectionEnd;\n    }\n    /**\r\n      Sets HTMLElement selection\r\n      @override\r\n    */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n    /**\r\n      HTMLElement value\r\n      @override\r\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.value;\n    },\n    set: function set(value) {\n      this.input.value = value;\n    }\n    /**\r\n      Binds HTMLElement events to mask internal events\r\n      @override\r\n    */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {\n      var _this2 = this;\n\n      Object.keys(handlers).forEach(function (event) {\n        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n      });\n    }\n    /**\r\n      Unbinds HTMLElement events to mask internal events\r\n      @override\r\n    */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this3 = this;\n\n      Object.keys(this._handlers).forEach(function (event) {\n        return _this3._toggleEventHandler(event);\n      });\n    }\n    /** */\n\n  }, {\n    key: \"_toggleEventHandler\",\n    value: function _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }]);\n\n  return HTMLMaskElement;\n}(MaskElement);\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport default HTMLMaskElement;\n"]},"metadata":{},"sourceType":"module"}