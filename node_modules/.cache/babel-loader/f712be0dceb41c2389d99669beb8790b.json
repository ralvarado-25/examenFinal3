{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raula\\\\Downloads\\\\final\\\\react-hotel-reservation-system-main\\\\src\\\\hocs\\\\withErrorHandler.tsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withErrorHandler = WrappedComponent => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: false\n      };\n    }\n\n    static getDerivedStateFromError(error) {\n      return {\n        error: true\n      };\n    }\n\n    componentDidCatch(error, errorInfo) {\n      // show a modal or something...\n      console.error('ðŸ”¥ something went wrong.', error, errorInfo);\n    }\n\n    render() {\n      if (this.state.error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-handler\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Something went wrong.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    }\n\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/src/hocs/withErrorHandler.tsx"],"names":["React","Component","withErrorHandler","WrappedComponent","constructor","props","state","error","getDerivedStateFromError","componentDidCatch","errorInfo","console","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAMA,MAAMC,gBAAgB,GAAIC,gBAAD,IAA2C;AAChE,SAAO,cAAcF,SAAd,CAAsE;AACzEG,IAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,KAAK,EAAE;AADE,OAAb;AAGH;;AAE8B,WAAxBC,wBAAwB,CAACD,KAAD,EAAe;AAC1C,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;AACH;;AAEDE,IAAAA,iBAAiB,CAACF,KAAD,EAAeG,SAAf,EAA2C;AACxD;AACAC,MAAAA,OAAO,CAACJ,KAAR,CAAc,0BAAd,EAA0CA,KAA1C,EAAiDG,SAAjD;AACH;;AAEDE,IAAAA,MAAM,GAAG;AACL,UAAI,KAAKN,KAAL,CAAWC,KAAf,EAAsB;AAClB,4BACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;;AAED,0BAAO,QAAC,gBAAD,OAAsB,KAAKF;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AA3BwE,GAA7E;AA6BH,CA9BD;;AAgCA,eAAeH,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\ntype TypeErrorHandlerProps = {};\ntype TypeErrorHandlerState = {\n    error: boolean;\n};\nconst withErrorHandler = (WrappedComponent: React.ComponentType) => {\n    return class extends Component<TypeErrorHandlerProps, TypeErrorHandlerState> {\n        constructor(props: {}) {\n            super(props);\n            this.state = {\n                error: false\n            };\n        }\n\n        static getDerivedStateFromError(error: Error) {\n            return { error: true };\n        }\n\n        componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n            // show a modal or something...\n            console.error('ðŸ”¥ something went wrong.', error, errorInfo);\n        }\n\n        render() {\n            if (this.state.error) {\n                return (\n                    <div className=\"error-handler\">\n                        <h1>Something went wrong.</h1>\n                    </div>\n                );\n            }\n\n            return <WrappedComponent {...this.props} />;\n        }\n    };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}