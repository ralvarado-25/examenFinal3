{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { getRoomDetails } from 'lib/scripts/utils';\n\nconst useHotels = () => {\n  _s();\n\n  const hotelsNames = useSelector(state => state.hotels.data.names);\n  const hotelsDetails = useSelector(state => state.hotels.data.details);\n  const cart = useSelector(state => state.cart);\n  const roomDetails = getRoomDetails(cart, hotelsDetails);\n  const selectedHotel = hotelsNames.find(hotel => hotel.id === cart.hotelId);\n  let selectedHotelDetails;\n\n  if (hotelsDetails) {\n    selectedHotelDetails = hotelsDetails.find(item => item.id === cart.hotelId);\n  }\n\n  return {\n    hotels: {\n      names: hotelsNames || [],\n      details: hotelsDetails || []\n    },\n    roomDetails,\n    selectedHotel: {\n      name: (selectedHotel === null || selectedHotel === void 0 ? void 0 : selectedHotel.hotel_name) || '',\n      details: selectedHotelDetails\n    }\n  };\n};\n\n_s(useHotels, \"j5ZO87xYskrURvgKOHU83PqbSGg=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\nexport default useHotels;","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/src/hooks/useHotels.ts"],"names":["useSelector","getRoomDetails","useHotels","hotelsNames","state","hotels","data","names","hotelsDetails","details","cart","roomDetails","selectedHotel","find","hotel","id","hotelId","selectedHotelDetails","item","name","hotel_name"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,WAAW,GAAGH,WAAW,CAAEI,KAAD,IAAyBA,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBC,KAA5C,CAA/B;AACA,QAAMC,aAAa,GAAGR,WAAW,CAAEI,KAAD,IAAyBA,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBG,OAA5C,CAAjC;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEI,KAAD,IAA4BA,KAAK,CAACM,IAAnC,CAAxB;AACA,QAAMC,WAAW,GAAGV,cAAc,CAACS,IAAD,EAAOF,aAAP,CAAlC;AACA,QAAMI,aAAa,GAAGT,WAAW,CAACU,IAAZ,CAAkBC,KAAD,IAAsBA,KAAK,CAACC,EAAN,KAAaL,IAAI,CAACM,OAAzD,CAAtB;AAEA,MAAIC,oBAAJ;;AACA,MAAIT,aAAJ,EAAmB;AACfS,IAAAA,oBAAoB,GAAGT,aAAa,CAACK,IAAd,CAAoBK,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYL,IAAI,CAACM,OAA9C,CAAvB;AACH;;AAED,SAAO;AACHX,IAAAA,MAAM,EAAE;AACJE,MAAAA,KAAK,EAAEJ,WAAW,IAAI,EADlB;AAEJM,MAAAA,OAAO,EAAED,aAAa,IAAI;AAFtB,KADL;AAKHG,IAAAA,WALG;AAMHC,IAAAA,aAAa,EAAE;AACXO,MAAAA,IAAI,EAAE,CAAAP,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEQ,UAAf,KAA6B,EADxB;AAEXX,MAAAA,OAAO,EAAEQ;AAFE;AANZ,GAAP;AAWH,CAvBD;;GAAMf,S;UACkBF,W,EACEA,W,EACTA,W;;;AAsBjB,eAAeE,SAAf","sourcesContent":["import { useSelector } from 'react-redux';\n\nimport { getRoomDetails } from 'lib/scripts/utils';\n\nconst useHotels = () => {\n    const hotelsNames = useSelector((state: TypeAppProps) => state.hotels.data.names);\n    const hotelsDetails = useSelector((state: TypeAppProps) => state.hotels.data.details);\n    const cart = useSelector((state: TypeCartDetails) => state.cart);\n    const roomDetails = getRoomDetails(cart, hotelsDetails);\n    const selectedHotel = hotelsNames.find((hotel: TypeHotel) => hotel.id === cart.hotelId);\n\n    let selectedHotelDetails: TypeHotelDetails | undefined;\n    if (hotelsDetails) {\n        selectedHotelDetails = hotelsDetails.find((item) => item.id === cart.hotelId);\n    }\n\n    return {\n        hotels: {\n            names: hotelsNames || [],\n            details: hotelsDetails || []\n        },\n        roomDetails,\n        selectedHotel: {\n            name: selectedHotel?.hotel_name || '',\n            details: selectedHotelDetails\n        }\n    };\n};\n\nexport default useHotels;\n"]},"metadata":{},"sourceType":"module"}