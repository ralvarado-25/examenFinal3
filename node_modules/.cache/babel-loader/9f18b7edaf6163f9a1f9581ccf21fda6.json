{"ast":null,"code":"import _ from 'lodash';\nimport IMask from 'imask/esm/imask';\nimport 'imask/esm/masked/dynamic';\nimport 'imask/esm/masked/pipe';\nimport validatorjs from 'validator';\n\nclass Logger {\n  constructor() {\n    this.logs = void 0;\n    this.logs = [];\n  }\n  /**\n   * Runs only on development environment\n   * @returns {void}\n   */\n\n\n  debug(...args) {\n    if (process.env.NODE_ENV !== 'development') return; // Convert arguments to cleaned array\n\n    const newArgs = [...args];\n    const filePath = newArgs[0]; // const fileName = filePath.replace(/^.*[\\\\/]/, '');\n\n    const fileName = filePath;\n    newArgs[0] = '%c' + fileName;\n    newArgs.splice(1, 0, 'color: #1c6ef7; font-weight: bold;');\n    this.logs.push({\n      type: 'DEBUG',\n      date: new Date(Date.now()).toISOString(),\n      log: newArgs\n    });\n    console.log(...newArgs);\n  }\n  /**\n   * Runs only on production environment\n   * @returns {void}\n   */\n\n\n  silly(...args) {\n    if (process.env.NODE_ENV !== 'production') return; // Convert arguments to cleaned array\n\n    const newArgs = [...args];\n    const filePath = newArgs[0]; // const fileName = filePath.replace(/^.*[\\\\/]/, '');\n\n    const fileName = filePath;\n    newArgs[0] = '%c' + fileName;\n    newArgs.splice(1, 0, 'color: #1c6ef7; font-weight: bold;');\n    this.logs.push({\n      type: 'DEBUG',\n      date: new Date(Date.now()).toISOString(),\n      log: newArgs\n    });\n    console.log(...newArgs);\n  }\n  /**\n   * Runs anywhere\n   * @returns {void}\n   */\n\n\n  error(...args) {\n    // Convert arguments to cleaned array\n    const newArgs = [...args];\n    newArgs[0] = '%c' + newArgs[0];\n    newArgs.splice(1, 0, 'color: red; font-weight: bold;');\n    this.logs.push({\n      type: 'ERROR',\n      date: new Date(Date.now()).toISOString(),\n      log: newArgs\n    });\n    console.error(...newArgs);\n  }\n\n}\n\nexport const logger = new Logger();\nexport const validator = (value, validators) => {\n  let isValid = true;\n  if (!(typeof validators !== 'undefined' && validators.length)) return isValid;\n  const validatorsLen = validators.length;\n\n  for (let i = 0; i < validatorsLen; i += 1) {\n    const validatorArr = validators[i];\n    let func = validatorArr[0];\n    const args = validatorArr.slice(1);\n    if (!func || typeof func !== 'function') continue;\n    const result = func(value, ...args);\n    isValid = isValid && result;\n    if (!isValid) break;\n  }\n\n  return isValid;\n};\nexport const isValidName = str => {\n  let isValid = true;\n  const strArr = str.split(' ');\n  const strArrLen = strArr.length;\n\n  if (strArr.length < 2) {\n    return false;\n  }\n\n  for (let i = 0; i < strArrLen; i += 1) {\n    isValid = isValid && validatorjs.isAlpha(strArr[i], 'en-US');\n  }\n\n  return isValid;\n};\nexport const getCreditCardYears = () => {\n  const targetYear = new Date().getFullYear() + 10;\n  const currentYear = new Date().getFullYear();\n  const yearsArr = [];\n\n  for (let i = currentYear; i <= targetYear; i += 1) {\n    yearsArr.push(i);\n  }\n\n  return yearsArr;\n};\nexport const getCreditCardMonths = year => {\n  let currentMonthIndex = 1;\n  const monthsArr = [];\n\n  if (year === new Date().getFullYear().toString()) {\n    currentMonthIndex = new Date().getMonth() + 1;\n  }\n\n  for (let i = currentMonthIndex; i <= 12; i += 1) {\n    monthsArr.push(i.toString().padStart(2, '0'));\n  }\n\n  return monthsArr;\n};\nexport const getStoredValue = key => {\n  try {\n    const item = window.localStorage.getItem(key);\n    return item ? JSON.parse(item) : '';\n  } catch (error) {\n    console.log('ðŸ”¥', error);\n  }\n};\nexport const clearStoredValues = () => {\n  localStorage.removeItem('step-0');\n  localStorage.removeItem('step-1');\n  localStorage.removeItem('step-2');\n  localStorage.removeItem('steps');\n  localStorage.removeItem('reservationId');\n};\nexport const getTwoDatesDiff = (checkin, checkout) => {\n  if (typeof checkin === 'string' && checkin && typeof checkout === 'string' && checkout) {\n    const timeDiff = new Date(checkout).getTime() - new Date(checkin).getTime();\n    return timeDiff / (1000 * 3600 * 24);\n  }\n\n  return 0;\n};\nexport const getTotalPrice = (price, days, visitors) => {\n  if (typeof days === 'undefined' || typeof visitors === 'undefined') {\n    return price;\n  }\n\n  return visitors * days * price;\n};\nexport const getRoomDetails = (cart, hotelsDetails) => {\n  const activeHotelId = cart.hotelId;\n  let activeHotelDetails;\n\n  if (hotelsDetails && activeHotelId) {\n    activeHotelDetails = hotelsDetails.find(item => item.id === activeHotelId);\n  }\n\n  if (activeHotelDetails) {\n    const roomTypeId = cart.roomType ? cart.roomType.split('-')[1] : '0';\n    const roomTypeIndex = activeHotelDetails.room_type.findIndex(type => type.id.toString() === roomTypeId.toString());\n    const viewTypeId = cart.viewType ? cart.viewType.split('-')[1] : '0';\n    const viewTypeIndex = activeHotelDetails.room_scenic.findIndex(type => type.id.toString() === viewTypeId.toString());\n    return {\n      type: activeHotelDetails.room_type[roomTypeIndex],\n      view: activeHotelDetails.room_scenic[viewTypeIndex]\n    };\n  }\n};\nexport const getTotals = (cart, hotelsDetails) => {\n  const roomDetails = getRoomDetails(cart, hotelsDetails);\n  let roomPrice = 0;\n  let roomRatio = 0;\n  let totalPrice = 0;\n\n  if ((roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.type) && (roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.view)) {\n    roomPrice = roomDetails.type.price;\n    roomRatio = roomDetails.view.price_rate;\n\n    if (cart.days && cart.adults) {\n      totalPrice = getTotalPrice(roomPrice, +cart.days, +cart.adults);\n    }\n  }\n\n  const finalPrice = roomRatio / 100 * totalPrice + totalPrice;\n  return {\n    room: roomPrice,\n    total: totalPrice,\n    ratio: roomRatio,\n    final: finalPrice\n  };\n};\nexport const compareProps = (a, b, keys) => _.isMatch( // check deep equality\na, // get properties from a\n_.pick(b, keys) // get properties from b\n);\nconst ccNumberMaskOptions = [{\n  mask: '0000 0000 0000 0000',\n  regex: '^(?:6011|65\\\\d{0,2}|64[4-9]\\\\d?)\\\\d{0,12}',\n  cardType: 'discover'\n}, {\n  mask: '0000 000000 0000',\n  regex: '^3(?:0([0-5]|9)|[689]\\\\d?)\\\\d{0,11}',\n  cardType: 'diners'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^(5[1-5]\\\\d{0,2}|22[2-9]\\\\d{0,1}|2[3-7]\\\\d{0,2})\\\\d{0,12}',\n  cardType: 'mastercard'\n}, {\n  mask: '0000-0000-0000-0000',\n  regex: '^(5019|4175|4571)\\\\d{0,12}',\n  cardType: 'dankort'\n}, {\n  mask: '0000-0000-0000-0000',\n  regex: '^63[7-9]\\\\d{0,13}',\n  cardType: 'instapayment'\n}, {\n  mask: '0000 000000 00000',\n  regex: '^(?:2131|1800)\\\\d{0,11}',\n  cardType: 'jcb15'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^(?:35\\\\d{0,2})\\\\d{0,12}',\n  cardType: 'jcb'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^(?:5[0678]\\\\d{0,2}|6304|67\\\\d{0,2})\\\\d{0,12}',\n  cardType: 'maestro'\n}, {\n  mask: '0000-0000-0000-0000',\n  regex: '^220[0-4]\\\\d{0,12}',\n  cardType: 'mir'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^4\\\\d{0,15}',\n  cardType: 'visa'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^62\\\\d{0,14}',\n  cardType: 'unionpay'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '^9792\\\\d{0,14}',\n  cardType: 'troy'\n}, {\n  mask: '0000 000000 00000',\n  regex: '^3[47]\\\\d{0,13}',\n  cardType: 'american-express'\n}, {\n  mask: '0000 0000 0000 0000',\n  regex: '',\n  cardType: 'unknown'\n}];\nexport const ccNumberMaskPipe = IMask.createPipe({\n  mask: ccNumberMaskOptions\n}, IMask.PIPE_TYPE.UNMASKED, IMask.PIPE_TYPE.MASKED);\nexport const getCCNumberMaskType = value => {\n  const len = ccNumberMaskOptions.length;\n\n  for (let i = 0; i < len; i += 1) {\n    const pattern = ccNumberMaskOptions[i].regex; // @ts-ignore\n\n    const re = new RegExp(pattern);\n\n    if (value.match(re) != null) {\n      return ccNumberMaskOptions[i];\n    }\n  }\n};\nexport const handleCatchedError = cb => e => {\n  console.error('ðŸ”¥ catched error', e);\n\n  if (e instanceof Error) {\n    // properly handle Error e\n    return cb(e.message);\n  } else if (typeof e === 'string' || e instanceof String) {// properly handle e or...stop using libraries that throw naked strings\n  } else if (typeof e === 'number' || e instanceof Number) {// properly handle e or...stop using libraries that throw naked numbers\n  } else if (typeof e === 'boolean' || e instanceof Boolean) {// properly handle e or...stop using libraries that throw naked booleans\n  } else {\n    // if we can't figure out what what we are dealing with then\n    // probably cannot recover...therefore, rethrow\n    // Note to Self: Rethink my life choices and choose better libraries to use.\n    throw e;\n  }\n};","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/src/lib/scripts/utils.ts"],"names":["_","IMask","validatorjs","Logger","constructor","logs","debug","args","process","env","NODE_ENV","newArgs","filePath","fileName","splice","push","type","date","Date","now","toISOString","log","console","silly","error","logger","validator","value","validators","isValid","length","validatorsLen","i","validatorArr","func","slice","result","isValidName","str","strArr","split","strArrLen","isAlpha","getCreditCardYears","targetYear","getFullYear","currentYear","yearsArr","getCreditCardMonths","year","currentMonthIndex","monthsArr","toString","getMonth","padStart","getStoredValue","key","item","window","localStorage","getItem","JSON","parse","clearStoredValues","removeItem","getTwoDatesDiff","checkin","checkout","timeDiff","getTime","getTotalPrice","price","days","visitors","getRoomDetails","cart","hotelsDetails","activeHotelId","hotelId","activeHotelDetails","find","id","roomTypeId","roomType","roomTypeIndex","room_type","findIndex","viewTypeId","viewType","viewTypeIndex","room_scenic","view","getTotals","roomDetails","roomPrice","roomRatio","totalPrice","price_rate","adults","finalPrice","room","total","ratio","final","compareProps","a","b","keys","isMatch","pick","ccNumberMaskOptions","mask","regex","cardType","ccNumberMaskPipe","createPipe","PIPE_TYPE","UNMASKED","MASKED","getCCNumberMaskType","len","pattern","re","RegExp","match","handleCatchedError","cb","e","Error","message","String","Number","Boolean"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport IMask from 'imask/esm/imask';\nimport 'imask/esm/masked/dynamic';\nimport 'imask/esm/masked/pipe';\nimport validatorjs from 'validator';\n\nclass Logger {\n    private logs: object[];\n\n    constructor() {\n        this.logs = [];\n    }\n\n    /**\n     * Runs only on development environment\n     * @returns {void}\n     */\n    debug(...args: any[]) {\n        if (process.env.NODE_ENV !== 'development') return;\n\n        // Convert arguments to cleaned array\n        const newArgs = [...args];\n\n        const filePath = newArgs[0];\n        // const fileName = filePath.replace(/^.*[\\\\/]/, '');\n        const fileName = filePath;\n\n        newArgs[0] = '%c' + fileName;\n        newArgs.splice(1, 0, 'color: #1c6ef7; font-weight: bold;');\n\n        this.logs.push({\n            type: 'DEBUG',\n            date: new Date(Date.now()).toISOString(),\n            log: newArgs\n        });\n\n        console.log(...newArgs);\n    }\n\n    /**\n     * Runs only on production environment\n     * @returns {void}\n     */\n    silly(...args: any[]) {\n        if (process.env.NODE_ENV !== 'production') return;\n\n        // Convert arguments to cleaned array\n        const newArgs = [...args];\n\n        const filePath = newArgs[0];\n        // const fileName = filePath.replace(/^.*[\\\\/]/, '');\n        const fileName = filePath;\n\n        newArgs[0] = '%c' + fileName;\n        newArgs.splice(1, 0, 'color: #1c6ef7; font-weight: bold;');\n\n        this.logs.push({\n            type: 'DEBUG',\n            date: new Date(Date.now()).toISOString(),\n            log: newArgs\n        });\n\n        console.log(...newArgs);\n    }\n\n    /**\n     * Runs anywhere\n     * @returns {void}\n     */\n    error(...args: any[]) {\n        // Convert arguments to cleaned array\n        const newArgs = [...args];\n\n        newArgs[0] = '%c' + newArgs[0];\n        newArgs.splice(1, 0, 'color: red; font-weight: bold;');\n\n        this.logs.push({\n            type: 'ERROR',\n            date: new Date(Date.now()).toISOString(),\n            log: newArgs\n        });\n\n        console.error(...newArgs);\n    }\n}\nexport const logger = new Logger();\n\ntype TypeValidatorPayload = any;\ndeclare global {\n    type TypeValidator = [(val: string, ...payload: TypeValidatorPayload[]) => boolean, any?];\n}\nexport const validator = (value: string, validators?: TypeValidator[]) => {\n    let isValid = true;\n\n    if (!(typeof validators !== 'undefined' && validators.length)) return isValid;\n\n    const validatorsLen = validators.length;\n\n    for (let i = 0; i < validatorsLen; i += 1) {\n        const validatorArr = validators[i];\n        let func = validatorArr[0];\n        const args = validatorArr.slice(1);\n\n        if (!func || typeof func !== 'function') continue;\n\n        const result = func(value, ...args);\n        isValid = isValid && result;\n        if (!isValid) break;\n    }\n\n    return isValid;\n};\n\nexport const isValidName = (str: string) => {\n    let isValid = true;\n    const strArr = str.split(' ');\n    const strArrLen = strArr.length;\n\n    if (strArr.length < 2) {\n        return false;\n    }\n\n    for (let i = 0; i < strArrLen; i += 1) {\n        isValid = isValid && validatorjs.isAlpha(strArr[i], 'en-US');\n    }\n\n    return isValid;\n};\n\nexport const getCreditCardYears = (): number[] => {\n    const targetYear = new Date().getFullYear() + 10;\n    const currentYear = new Date().getFullYear();\n    const yearsArr = [];\n\n    for (let i = currentYear; i <= targetYear; i += 1) {\n        yearsArr.push(i);\n    }\n\n    return yearsArr;\n};\n\nexport const getCreditCardMonths = (year: string): string[] => {\n    let currentMonthIndex = 1;\n    const monthsArr = [];\n\n    if (year === new Date().getFullYear().toString()) {\n        currentMonthIndex = new Date().getMonth() + 1;\n    }\n\n    for (let i = currentMonthIndex; i <= 12; i += 1) {\n        monthsArr.push(i.toString().padStart(2, '0'));\n    }\n\n    return monthsArr;\n};\n\nexport const getStoredValue = <T>(key: string): T | undefined => {\n    try {\n        const item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : '';\n    } catch (error) {\n        console.log('ðŸ”¥', error);\n    }\n};\n\nexport const clearStoredValues = (): void => {\n    localStorage.removeItem('step-0');\n    localStorage.removeItem('step-1');\n    localStorage.removeItem('step-2');\n    localStorage.removeItem('steps');\n    localStorage.removeItem('reservationId');\n};\n\nexport const getTwoDatesDiff = (checkin: string | number, checkout: string | number): number => {\n    if (typeof checkin === 'string' && checkin && typeof checkout === 'string' && checkout) {\n        const timeDiff = new Date(checkout).getTime() - new Date(checkin).getTime();\n        return timeDiff / (1000 * 3600 * 24);\n    }\n    return 0;\n};\n\nexport const getTotalPrice = (price: number, days: number, visitors: number): number => {\n    if (typeof days === 'undefined' || typeof visitors === 'undefined') {\n        return price;\n    }\n    return visitors * days * price;\n};\n\nexport const getRoomDetails = (cart: TypeCartDetails['cart'], hotelsDetails: TypeHotelDetails[]) => {\n    const activeHotelId = cart.hotelId;\n    let activeHotelDetails;\n    if (hotelsDetails && activeHotelId) {\n        activeHotelDetails = hotelsDetails.find((item) => item.id === activeHotelId);\n    }\n\n    if (activeHotelDetails) {\n        const roomTypeId = cart.roomType ? cart.roomType.split('-')[1] : '0';\n        const roomTypeIndex = activeHotelDetails.room_type.findIndex(\n            (type) => type.id.toString() === roomTypeId.toString()\n        );\n\n        const viewTypeId = cart.viewType ? cart.viewType.split('-')[1] : '0';\n        const viewTypeIndex = activeHotelDetails.room_scenic.findIndex(\n            (type) => type.id.toString() === viewTypeId.toString()\n        );\n\n        return {\n            type: activeHotelDetails.room_type[roomTypeIndex],\n            view: activeHotelDetails.room_scenic[viewTypeIndex]\n        };\n    }\n};\n\nexport const getTotals = (cart: TypeCartDetails['cart'], hotelsDetails: TypeHotelDetails[]) => {\n    const roomDetails = getRoomDetails(cart, hotelsDetails);\n\n    let roomPrice = 0;\n    let roomRatio = 0;\n    let totalPrice = 0;\n    if (roomDetails?.type && roomDetails?.view) {\n        roomPrice = roomDetails.type.price;\n        roomRatio = roomDetails.view.price_rate;\n        if (cart.days && cart.adults) {\n            totalPrice = getTotalPrice(roomPrice, +cart.days, +cart.adults);\n        }\n    }\n\n    const finalPrice = (roomRatio / 100) * totalPrice + totalPrice;\n\n    return {\n        room: roomPrice,\n        total: totalPrice,\n        ratio: roomRatio,\n        final: finalPrice\n    };\n};\n\nexport const compareProps = <T>(a: object, b: T, keys: string[]): boolean =>\n    _.isMatch(\n        // check deep equality\n        a, // get properties from a\n        _.pick(b, keys) // get properties from b\n    );\n\ntype TypeMaskOption = {\n    mask: string;\n    regex?: string;\n    cardType: string;\n};\nconst ccNumberMaskOptions: TypeMaskOption[] = [\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^(?:6011|65\\\\d{0,2}|64[4-9]\\\\d?)\\\\d{0,12}',\n        cardType: 'discover'\n    },\n    {\n        mask: '0000 000000 0000',\n        regex: '^3(?:0([0-5]|9)|[689]\\\\d?)\\\\d{0,11}',\n        cardType: 'diners'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^(5[1-5]\\\\d{0,2}|22[2-9]\\\\d{0,1}|2[3-7]\\\\d{0,2})\\\\d{0,12}',\n        cardType: 'mastercard'\n    },\n    {\n        mask: '0000-0000-0000-0000',\n        regex: '^(5019|4175|4571)\\\\d{0,12}',\n        cardType: 'dankort'\n    },\n    {\n        mask: '0000-0000-0000-0000',\n        regex: '^63[7-9]\\\\d{0,13}',\n        cardType: 'instapayment'\n    },\n    {\n        mask: '0000 000000 00000',\n        regex: '^(?:2131|1800)\\\\d{0,11}',\n        cardType: 'jcb15'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^(?:35\\\\d{0,2})\\\\d{0,12}',\n        cardType: 'jcb'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^(?:5[0678]\\\\d{0,2}|6304|67\\\\d{0,2})\\\\d{0,12}',\n        cardType: 'maestro'\n    },\n    {\n        mask: '0000-0000-0000-0000',\n        regex: '^220[0-4]\\\\d{0,12}',\n        cardType: 'mir'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^4\\\\d{0,15}',\n        cardType: 'visa'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^62\\\\d{0,14}',\n        cardType: 'unionpay'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '^9792\\\\d{0,14}',\n        cardType: 'troy'\n    },\n    {\n        mask: '0000 000000 00000',\n        regex: '^3[47]\\\\d{0,13}',\n        cardType: 'american-express'\n    },\n    {\n        mask: '0000 0000 0000 0000',\n        regex: '',\n        cardType: 'unknown'\n    }\n];\nexport const ccNumberMaskPipe = IMask.createPipe(\n    {\n        mask: ccNumberMaskOptions\n    },\n    IMask.PIPE_TYPE.UNMASKED,\n    IMask.PIPE_TYPE.MASKED\n);\n\nexport const getCCNumberMaskType = (value: string): TypeMaskOption | undefined => {\n    const len = ccNumberMaskOptions.length;\n\n    for (let i = 0; i < len; i += 1) {\n        const pattern = ccNumberMaskOptions[i].regex;\n        // @ts-ignore\n        const re = new RegExp(pattern);\n        if (value.match(re) != null) {\n            return ccNumberMaskOptions[i];\n        }\n    }\n};\n\nexport const handleCatchedError = (cb: Function) => (e: any) => {\n    console.error('ðŸ”¥ catched error', e);\n    if (e instanceof Error) {\n        // properly handle Error e\n        return cb(e.message);\n    } else if (typeof e === 'string' || e instanceof String) {\n        // properly handle e or...stop using libraries that throw naked strings\n    } else if (typeof e === 'number' || e instanceof Number) {\n        // properly handle e or...stop using libraries that throw naked numbers\n    } else if (typeof e === 'boolean' || e instanceof Boolean) {\n        // properly handle e or...stop using libraries that throw naked booleans\n    } else {\n        // if we can't figure out what what we are dealing with then\n        // probably cannot recover...therefore, rethrow\n        // Note to Self: Rethink my life choices and choose better libraries to use.\n        throw e;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}