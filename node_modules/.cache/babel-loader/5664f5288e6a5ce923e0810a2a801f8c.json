{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raula\\\\Downloads\\\\final\\\\react-hotel-reservation-system-main\\\\src\\\\containers\\\\Steps\\\\RoomView\\\\RoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport validatorjs from 'validator';\nimport { useForm, useLocalStorage, useCart, useHotels } from 'hooks';\nimport { Portlet, Button, ReservationDetails, ImageCheckbox } from 'components';\nimport { getTotalPrice } from 'lib/scripts/utils';\nimport formClasses from 'components/Form/Form.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst step = {\n  index: 1,\n  isValid: false,\n  inputs: {\n    roomType: {\n      value: '',\n      isTouched: false,\n      isValid: false\n    },\n    viewType: {\n      value: '',\n      isTouched: false,\n      isValid: false\n    }\n  }\n};\n\nconst RoomView = props => {\n  _s();\n\n  var _selectedHotel$detail, _selectedHotel$detail2;\n\n  const [storedValue, setLocalStorageValue] = useLocalStorage(`step-${step.index}`, step);\n  const [formState, inputHandler] = useForm(storedValue.inputs, storedValue.isValid);\n  const {\n    cart\n  } = useCart();\n  const {\n    selectedHotel\n  } = useHotels();\n  const roomTypeOptions = [];\n\n  if (selectedHotel === null || selectedHotel === void 0 ? void 0 : (_selectedHotel$detail = selectedHotel.details) === null || _selectedHotel$detail === void 0 ? void 0 : _selectedHotel$detail.room_type.length) {\n    selectedHotel.details.room_type.forEach(type => {\n      roomTypeOptions.push({\n        id: `roomType-${type.id}`,\n        label: type.title,\n        meta: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [cart.days, \" \", cart.days && +cart.days > 1 ? 'Days' : 'Day', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), cart.adults, \" \", cart.adults && +cart.adults > 1 ? 'Adults' : 'Adult']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [cart.days && cart.adults && getTotalPrice(type.price, +cart.days, +cart.adults).toFixed(2), ' ', \"Bs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true),\n        imgUrl: type.photo\n      });\n    });\n  }\n\n  const viewTypeOptions = [];\n\n  if (selectedHotel === null || selectedHotel === void 0 ? void 0 : (_selectedHotel$detail2 = selectedHotel.details) === null || _selectedHotel$detail2 === void 0 ? void 0 : _selectedHotel$detail2.room_scenic.length) {\n    selectedHotel.details.room_scenic.forEach(type => {\n      viewTypeOptions.push({\n        id: `viewType-${type.id}`,\n        label: type.title,\n        meta: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Price impact ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"+ \", type.price_rate, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true),\n        imgUrl: type.photo\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Portlet, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: formClasses['form__wide-row'],\n        children: /*#__PURE__*/_jsxDEV(ReservationDetails, {\n          show: ['checkin', 'checkout', 'adults', 'children']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: [formClasses['form__label'], formClasses['form__section__title']].join(' '),\n        children: \"Seleccione habitaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formClasses['form__wide-row'],\n        children: /*#__PURE__*/_jsxDEV(ImageCheckbox, {\n          id: \"roomType\",\n          value: formState.inputs.roomType.value,\n          validity: formState.inputs.roomType.isValid,\n          isTouched: formState.inputs.roomType.isTouched,\n          validators: [[validatorjs.isLength, {\n            min: 1,\n            max: undefined\n          }]],\n          validationMessage: \"Please select a room type.\",\n          onChange: inputHandler,\n          options: roomTypeOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: [formClasses['form__label'], formClasses['form__section__title']].join(' '),\n        children: \"Seleccione vista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formClasses['form__wide-row'],\n        children: /*#__PURE__*/_jsxDEV(ImageCheckbox, {\n          id: \"viewType\",\n          value: formState.inputs.viewType.value,\n          validity: formState.inputs.viewType.isValid,\n          isTouched: formState.inputs.viewType.isTouched,\n          validators: [[validatorjs.isLength, {\n            min: 1,\n            max: undefined\n          }]],\n          validationMessage: \"Please select a view type.\",\n          onChange: inputHandler,\n          options: viewTypeOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [formClasses['form__normal-row'], formClasses['form__actions']].join(' '),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          color: \"none\",\n          onClick: () => {\n            props.stepChangeHandler(step.index, formState, step.index - 1);\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => {\n            if (!formState.isValid) return;\n            props.stepChangeHandler(step.index, formState, step.index + 1);\n            setLocalStorageValue({ ...step,\n              isValid: formState.isValid,\n              inputs: { ...formState.inputs\n              }\n            });\n          },\n          disabled: !formState.isValid,\n          children: \"Save and continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomView, \"bRRxocjkCcdYw3h6/l2ebf6jqXg=\", false, function () {\n  return [useLocalStorage, useForm, useCart, useHotels];\n});\n\n_c = RoomView;\nexport default RoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomView\");","map":{"version":3,"sources":["C:/Users/raula/Downloads/final/react-hotel-reservation-system-main/src/containers/Steps/RoomView/RoomView.tsx"],"names":["React","validatorjs","useForm","useLocalStorage","useCart","useHotels","Portlet","Button","ReservationDetails","ImageCheckbox","getTotalPrice","formClasses","step","index","isValid","inputs","roomType","value","isTouched","viewType","RoomView","props","storedValue","setLocalStorageValue","formState","inputHandler","cart","selectedHotel","roomTypeOptions","details","room_type","length","forEach","type","push","id","label","title","meta","days","adults","price","toFixed","imgUrl","photo","viewTypeOptions","room_scenic","price_rate","e","preventDefault","join","isLength","min","max","undefined","stepChangeHandler"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validatorjs from 'validator';\n\nimport { useForm, useLocalStorage, useCart, useHotels } from 'hooks';\nimport { Portlet, Button, ReservationDetails, ImageCheckbox } from 'components';\nimport { getTotalPrice } from 'lib/scripts/utils';\n\nimport formClasses from 'components/Form/Form.module.scss';\n\ntype TypeRoomOptions = {\n    id: string;\n    label: string;\n    meta: JSX.Element;\n    imgUrl: string;\n};\n\nconst step: TypeStep = {\n    index: 1,\n    isValid: false,\n    inputs: {\n        roomType: {\n            value: '',\n            isTouched: false,\n            isValid: false\n        },\n        viewType: {\n            value: '',\n            isTouched: false,\n            isValid: false\n        }\n    }\n};\n\nconst RoomView: React.FC<TypeReservationStep> = (props: TypeReservationStep) => {\n    const [storedValue, setLocalStorageValue] = useLocalStorage(`step-${step.index}`, step);\n    const [formState, inputHandler] = useForm(storedValue.inputs, storedValue.isValid);\n    const { cart } = useCart();\n    const { selectedHotel } = useHotels();\n\n    const roomTypeOptions: TypeRoomOptions[] = [];\n    if (selectedHotel?.details?.room_type.length) {\n        selectedHotel.details.room_type.forEach((type) => {\n            roomTypeOptions.push({\n                id: `roomType-${type.id}`,\n                label: type.title,\n                meta: (\n                    <>\n                        <span>\n                            {cart.days} {cart.days && +cart.days > 1 ? 'Days' : 'Day'}\n                            <br />\n                            {cart.adults} {cart.adults && +cart.adults > 1 ? 'Adults' : 'Adult'}\n                        </span>\n                        <span>\n                            {cart.days && cart.adults && getTotalPrice(type.price, +cart.days, +cart.adults).toFixed(2)}{' '}\n                            Bs\n                        </span>\n                    </>\n                ),\n                imgUrl: type.photo\n            });\n        });\n    }\n\n    const viewTypeOptions: TypeRoomOptions[] = [];\n    if (selectedHotel?.details?.room_scenic.length) {\n        selectedHotel.details.room_scenic.forEach((type) => {\n            viewTypeOptions.push({\n                id: `viewType-${type.id}`,\n                label: type.title,\n                meta: (\n                    <>\n                        <span>Price impact ratio</span>\n                        <span>+ {type.price_rate} %</span>\n                    </>\n                ),\n                imgUrl: type.photo\n            });\n        });\n    }\n\n    return (\n        <Portlet>\n            <form onSubmit={(e) => e.preventDefault()}>\n                <div className={formClasses['form__wide-row']}>\n                    <ReservationDetails show={['checkin', 'checkout', 'adults', 'children']} />\n                </div>\n                <h4 className={[formClasses['form__label'], formClasses['form__section__title']].join(' ')}>\n                    Seleccione habitación\n                </h4>\n                <div className={formClasses['form__wide-row']}>\n                    <ImageCheckbox\n                        id=\"roomType\"\n                        value={formState.inputs.roomType.value}\n                        validity={formState.inputs.roomType.isValid}\n                        isTouched={formState.inputs.roomType.isTouched}\n                        validators={[[validatorjs.isLength, { min: 1, max: undefined }]]}\n                        validationMessage=\"Please select a room type.\"\n                        onChange={inputHandler}\n                        options={roomTypeOptions}\n                    />\n                </div>\n                <h4 className={[formClasses['form__label'], formClasses['form__section__title']].join(' ')}>\n                    Seleccione vista\n                </h4>\n                <div className={formClasses['form__wide-row']}>\n                    <ImageCheckbox\n                        id=\"viewType\"\n                        value={formState.inputs.viewType.value}\n                        validity={formState.inputs.viewType.isValid}\n                        isTouched={formState.inputs.viewType.isTouched}\n                        validators={[[validatorjs.isLength, { min: 1, max: undefined }]]}\n                        validationMessage=\"Please select a view type.\"\n                        onChange={inputHandler}\n                        options={viewTypeOptions}\n                    />\n                </div>\n                <div className={[formClasses['form__normal-row'], formClasses['form__actions']].join(' ')}>\n                    <Button\n                        type=\"button\"\n                        color=\"none\"\n                        onClick={() => {\n                            props.stepChangeHandler(step.index, formState, step.index - 1);\n                        }}\n                    >\n                        Back\n                    </Button>\n                    <Button\n                        type=\"button\"\n                        onClick={() => {\n                            if (!formState.isValid) return;\n                            props.stepChangeHandler(step.index, formState, step.index + 1);\n                            setLocalStorageValue({\n                                ...step,\n                                isValid: formState.isValid,\n                                inputs: { ...formState.inputs }\n                            });\n                        }}\n                        disabled={!formState.isValid}\n                    >\n                        Save and continue\n                    </Button>\n                </div>\n            </form>\n        </Portlet>\n    );\n};\n\nexport default RoomView;\n"]},"metadata":{},"sourceType":"module"}